#!/usr/bin/bash

declare NTFS_UUID='C64618AA46189CED'
declare NTFS_TARGET='/mnt/ssd500/ntfs'
declare NTFS_MOUNT='false'

declare BTRFS_UUID='434d2f2b-0784-460b-aab2-21c80d454d5f'
declare BTRFS_TARGET='/mnt/ssd500/btrfs'
declare BTRFS_MOUNT='false'

declare UMOUNT='false'

declare -a SYSTEMD_MOUNT_OPTS=(
    --no-block
)

declare LOGGER_FACILITY='user'
declare LOGGER_TAG="${0##*/}"
declare -a LOGGER_OPTS_INFO=(
    -i -t "$LOGGER_TAG"
    -p "$LOGGER_FACILITY.info"
)
declare -a LOGGER_OPTS_ERR=(
    -i -t "$LOGGER_TAG"
    -p "$LOGGER_FACILITY.err"
)

function usage() {
    logger "${LOGGER_OPTS_INFO[@]}" "Usage: $0 [OPTIONS]"
    logger "${LOGGER_OPTS_INFO[@]}" ''
    logger "${LOGGER_OPTS_INFO[@]}" ''
    logger "${LOGGER_OPTS_INFO[@]}" '[OPTIONS]'
    logger "${LOGGER_OPTS_INFO[@]}" '-n  | --ntfs          Mount NTFS'
    logger "${LOGGER_OPTS_INFO[@]}" '-b  | --btrfs         Mount BTRFS'
    logger "${LOGGER_OPTS_INFO[@]}" "-nu | --ntfs-uuid     NTFS device UUID (default: $NTFS_UUID)"
    logger "${LOGGER_OPTS_INFO[@]}" "-bu | --btrfs-uuid    BTRFS device UUID (default: $BTRFS_UUID)"
    logger "${LOGGER_OPTS_INFO[@]}" "-nt | --ntfs-target   NTFS mount point (default: $NTFS_TARGET)"
    logger "${LOGGER_OPTS_INFO[@]}" "-bt | --btrfs-target  BTRFS mount point (default: $BTRFS_TARGET)"
    logger "${LOGGER_OPTS_INFO[@]}" '-G  | --collect       Pass --collect argument to systemd-mount'
    logger "${LOGGER_OPTS_INFO[@]}" '-u  | --umount        Umount instead of mount'
    logger "${LOGGER_OPTS_INFO[@]}" '-h  | --help          Show this help message and exit'
}

function check_mounted() {
    local mounted='false'
    mountpoint "$1" >/dev/null 2>&1 && mounted='true'

    echo "$mounted"
}

function mount_ntfs() {
    local mounted
    mounted="$(check_mounted "$NTFS_TARGET")"

    local -a opts=()

    if [ "$UMOUNT" = 'false' ] && [ "$mounted" = 'false' ]; then
        opts+=(
            ${SYSTEMD_MOUNT_OPTS[@]}
            -t ntfs-3g
            -o 'rw,relatime,nofail,x-gvfs-show,uid=1000,gid=1000,umask=022'
            "/dev/disk/by-uuid/$NTFS_UUID"
            "$NTFS_TARGET"
        )
    elif [ "$UMOUNT" = 'true' ] && [ "$mounted" = 'true' ]; then
        opts+=(-u "$NTFS_TARGET")
    fi

    local output=''
    if output=$(systemd-mount "${opts[@]}" 2>&1); then
        logger "${LOGGER_OPTS_INFO[@]}" "$output"
    else
        logger "${LOGGER_OPTS_ERR[@]}" "$output"
    fi
}

function mount_btrfs() {
    local mounted
    mounted="$(check_mounted "$BTRFS_TARGET")"

    local -a opts=()

    if [ "$UMOUNT" = 'false' ] && [ "$mounted" = 'false' ]; then
        opts+=(
            ${SYSTEMD_MOUNT_OPTS[@]}
            -t btrfs
            -o 'rw,relatime,ssd,space_cache=v2,subvolid=5,subvol=/,'
            "/dev/disk/by-uuid/$BTRFS_UUID" "$BTRFS_TARGET"
        )
    elif [ "$UMOUNT" = 'true' ] && [ "$mounted" = 'true' ]; then
        opts+=(-u "$BTRFS_TARGET")
    fi

    local output=''
    if output=$(systemd-mount "${opts[@]}" 2>&1); then
        logger "${LOGGER_OPTS_INFO[@]}" "$output"
    else
        logger "${LOGGER_OPTS_ERR[@]}" "$output"
    fi
}

while [ -n "$1" ]; do
    case "$1" in
    -n | --ntfs) NTFS_MOUNT='true' ;;
    -b | --btrfs) BTRFS_MOUNT='true' ;;
    -nu | --ntfs-uuid)
        shift
        NTFS_UUID="$1"
        ;;
    -bu | --btrfs-uuid)
        shift
        BTRFS_UUID="$1"
        ;;
    -nt | --ntfs-target)
        shift
        NTFS_TARGET="$1"
        ;;
    -bt | --btrfs-target)
        shift
        BTRFS_TARGET="$1"
        ;;
    -u | --umount) UMOUNT='true' ;;
    -G | --collect) SYSTEMD_MOUNT_OPTS+=("$1") ;;
    -h | --help)
        usage
        exit 0
        ;;
    *)
        logger "${LOGGER_OPTS_ERR[@]}" "Unknown arg $1"
        exit 1
        ;;
    esac
    shift
done

[ "$NTFS_MOUNT" = 'true' ] && mount_ntfs

[ "$BTRFS_MOUNT" = 'true' ] && mount_btrfs

exit 0
